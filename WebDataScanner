#WebDataScanner
#A Python3 program by brok3nwir3 
#This program that takes a webpage as input, then scans the page and it's HTML code for sensitive data.

#----IMPORT REQUIRED LIBRARIES----

#Import the library for interpreting Bash commands.
import subprocess
#Import the library for regular expression string matching.
import re
#Import the libarary for matching Unix-style pathname patterns.
import glob
#Import the library for interacting with the OS.
import os

#----DEFINE FUNCTIONS----

def files2temp():
        #Find all HTML files in the current directory (tempDir), and store them in an array.
        pageArray = []
        for file in glob.glob("*"):
                if not file.startswith('WebDataScanner.py') and not file.startswith('temp.txt'):
                        pageArray.append(file)

        #Writes all the contents of the downloaded files into a single temp.txt output file.
        my_cmd = ['cat'] + pageArray  #input_files
        with open('temp.txt', "w") as outfile:
                subprocess.run(my_cmd, stdout=outfile)

#Note for some of the following functions...
#HTML from WGET often contains strings with a less than or greater than symbols for HTML tags...
#This means strings may be delimited with '<' or '>' rather than \n or \s in many cases.

def search4email():
        #Search the target file for email addresses.
        print("Possible Emails:")
        targetFile = open("temp.txt","r")
        for line in targetFile:
                email = re.search(r'[\w.-]+@[\w.-]+', line)
                if email:
                        print(email.group())
        targetFile.close()

def search4phone():
        #Search the target file for phone numbers.
        print("\nPossible Phone Numbers:")
        targetFile = open("temp.txt","r")
        for line in targetFile:
                phoneType1 = re.search(r'([>\n\s]{1}\d\d\d[.-]+\d\d\d[.-]+\d\d\d\d[\s\n<]{1})', line)
                if phoneType1:
                        print(phoneType1.group().replace('<','').replace('>','').replace(' ',''))
                phoneType2 = re.search(r'([>\n\s]{1}\(+\d\d\d+\)+\s\d\d\d+([ ]{0,1})+([.-]{0,1})+\d\d\d\d[\s\n<]{1})', line)
                if phoneType2:
                        print(phoneType2.group().replace('<','').replace('>',''))
        targetFile.close()

def search4social():
        #Search the target file for social security numbers.
        print("\nPossible Social Security Numbers:")
        targetFile = open("temp.txt", "r")
        for line in targetFile:
                ssn = re.search(r'([>\n\s]{1}\d{3}[-]+\d{2}[-]+\d{4}[\s\n<]{1})', line)
                if ssn:
                        print(ssn.group().replace('<','').replace('>','').replace(' ',''))
        targetFile.close()

def search4cc():
        #Search the target file for credit card numbers.
        print("\nPossible Credit Card Numbers:")
        targetFile = open("temp.txt", "r")
        for line in targetFile:
                ccnType1 = re.search(r'([>\n\s]{1}\d{4}\s\d{4}\s\d{4}\s\d{4}[\s\n<]{1})', line)
                if ccnType1:
                        print(ccnType1.group().replace('<','').replace('>',''))
                ccnType2 = re.search(r'([>\n\s]{1}\d{4}[-]\d{4}[-]\d{4}[-]\d{4}[\s\n<]{1})', line)
                if ccnType2:
                        print(ccnType2.group().replace('<','').replace('>','').replace(' ',''))
        targetFile.close()

def search4interesting():
        #Search the target file for interesting strings.
        interestingStrings = False
        interestingList = []

        targetFile = open("temp.txt","r")
        for line in targetFile:
                check1 = re.search(r'api=', line)
                if check1:
                        interestingList.append("api=")
                        break
        targetFile = open("temp.txt","r")
        for line in targetFile:
                check2 = re.search(r'token=', line)
                if check2:
                        interestingList.append("token=")
                        break
        targetFile = open("temp.txt","r")
        for line in targetFile:
                check3 = re.search(r'session=', line)
                if check3:
                        interestingList.append("session=")
                        break
        targetFile = open("temp.txt","r")
        for line in targetFile:
                check4 = re.search(r'sessionid=', line)
                if check4:
                        interestingList.append("sessionid=")
                        break
        targetFile = open("temp.txt","r")
        for line in targetFile:
                check5 = re.search(r'userid=', line)
                if check5:
                        interestingList.append("userid=")
                        break
        targetFile = open("temp.txt","r")
        for line in targetFile:
                check6 = re.search(r'cookie=', line)
                if check6:
                        interestingList.append("cookie=")
                        break

        #Check whether interesting strings were found.
        if len(interestingList) > 0:
                interestingStrings = True

        #If interesting strings were found, provide option to list items.
        if interestingStrings == True:
                print("\nInteresting code strings were detected.")
                proceed = input("\nPress \'y\' to view or \'n\' to exit:")
                if proceed == 'y':
                        print("\nOne or more instances of...")
                        for x in range(len(interestingList)):
                                print(interestingList[x])
        targetFile.close()

#----PROGRAM STARTS HERE----

print("\nRunning WebDataScanner...\n")

print("Query Options...")
print("1 - Page Query")
print("2 - Directory Query")
print("3 - Full website Query")

queryType = input("\nSpecify query type: ")
if queryType == '':
        print("Empty option parameter. Exiting.")
        quit()

#Prompt user for a target, and store the value.
webpage = input("\nEnter target URL: ")
if webpage == '':
        print("Empty target parameter. Exiting.")
        quit()


#Note the starting directory for later, make a temp directory, and move program to the new dir>
initial_cwd = os.getcwd()
proc1 = subprocess.run(["mkdir", "tempDir"])
os.chdir('tempDir')

#Select WGET (plus parameters), based on selected query option.
if queryType == '1':
        proc2 = subprocess.run(["wget", "-q", "-np", "--show-progress", webpage])
if queryType =='2':
        proc2 = subprocess.run(["wget", "-q", "-np", "-nd", "--show-progress", "-r", "-l 1", webpage])
if queryType =='3':
        proc2 = subprocess.run(["wget", "-q", "-np", webpage])

#WGET Quick Reference:
# -q = Turn off output.
# -S = Include server response headers.
# -np = No parents directories.
# -nd = Prevents new directories from being created.
# -r = Resursively pull files from directories.
# -A = Accept... Sets an accept list for file types, like .html, .pdf, etc.
# -l 1 = Sets the recusion depth to one, when the '-r' tag is present.
# --show-progress = Displays a download progress bar.
# Example WGET command...
#  wget -nd -r -l 1 -np https://www.google.com

files2temp()

#----BEGIN STRING SEARCHING----

print()
search4email()
search4phone()
search4social()
search4cc()
search4interesting()

#----CLEAN UP STEPS----

#Return to the program to the original directory, then remove the temp directory.
os.chdir(initial_cwd)
proc3 = subprocess.run(["rm","-r", "tempDir"])
